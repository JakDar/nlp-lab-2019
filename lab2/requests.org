* Ex1
  - [[./docker-compose.yml]]
* Ex2
  #+BEGIN_SRC bash
  <ES directory>/bin/elasticsearch-plugin install \
    pl.allegro.tech.elasticsearch.plugin:elasticsearch-analysis-morfologik:6.6.2
 #+END_SRC
* Ex3 - Create tokenizer
** Create Tokenizer
   #+BEGIN_SRC json
   PUT law_index4
  {
    "settings": {
      "analysis": {
        "analyzer": {
          "my_custom_analyzer": {
            "type":      "custom", 
            "tokenizer": "standard",
            "filter": [
              "morfologik_stem",
              "law_synonyms",
              "lowercase"
            ]
          }
        },
        "filter" : {
            "law_synonyms" : {
                "type" : "synonym",
                "synonyms" : [
                    "kpk  => kodeks postępowania cywilnego",
                    "kpc => kodeks postępowania karnego",
                    "kk => kodeks karny",
                    "kc => kodeks cywilny"
                ]
            }
        }
      }
    }
  }
  #+END_SRC json
  
* Ex4 Create index 
  The same as  [[Ex3 - Create tokenizer]]
* Ex5 Load data
** Load data
  #+BEGIN_SRC python
  from elasticsearch import Elasticsearch
  from elasticsearch import helpers
  import os
  es = Elasticsearch()

  actions = [{
      "_index": "law_index4",
      "_id": i,
      "_source": {
          "content": open("ustawy/" + file).read(),
          "filename": file
      }
  } for i, file in enumerate(os.listdir("ustawy"))]

  helpers.bulk(es, actions)
  #+END_SRC


5QQxOiGlqrNNc+Ql7Ez9P1viiTPys15+AJZvtDowVHA
* Ex6 Count documents with ~ustawa~
** Request
   POST law_index4/_search?size=1
  #+BEGIN_SRC json
  {
    "query": {
      "terms": {
        "content": [ "ustawa" ]
      }
    }
  }   
  #+END_SRC json

** Response
  #+BEGIN_SRC json
  {
    "took" : 6,
    "timed_out" : false,
    "_shards" : {
      "total" : 5,
      "successful" : 5,
      "skipped" : 0,
      "failed" : 0
    },
    "hits" : {
      "total" : 1179,
      "max_score" : 0.0,
      "hits" : [ ]
    }
  }
  #+END_SRC 
* Ex7 ~kpc~ in order
  Determine the number of legislative acts containing the words ~kodeks postępowania cywilnego~
  in the specified order, but in an *any* inflection form.
** Request
  #+begin_src json

  #+end_src
* other
#+begin_src python :results  value
def ala(x):
  return x*2
return ala(4)
#+end_src

#+RESULTS:
: 8
